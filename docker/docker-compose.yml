version: '3'
services:

  pong:
    build: ./pong
    image: pong
    container_name: pong
    restart: always
    volumes:
      - PongVol:/usr/src/app
    ports:
      - 8000:8000
    networks:
      - net

  database:
    image: postgres:13
    container_name: database
    restart: always
    ports:
      - 5432:5432
    volumes:
      - DatabaseVol:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root 
      POSTGRES_PASSWORD: rootroot
      POSTGRES_DB: db_pong
    networks:
      - net

  frontend:
      image: nginx:1.27.0
      container_name: frontend
      restart: always
      volumes:
        - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
        - FrontVol:/usr/share/nginx/html
      ports:
        - 8080:80
      networks:
        - net


  # rachid part
  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8008:8080
    networks:
      - net
  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - net

volumes:
  PongVol:
    driver: local
    driver_opts:
      type: none
      device: /Users/rennatiq/Desktop/ft_transcendence/docker/pong/volumes/PongVol
      o: bind
  DatabaseVol:
    driver: local
    driver_opts:
      type: none
      device: /Users/rennatiq/Desktop/ft_transcendence/docker/pong/volumes/DatabaseVol
      o: bind
  FrontVol:
    driver: local
    driver_opts:
      type: none
      device: /Users/rennatiq/Desktop/ft_transcendence/docker/frontend/FrontVol
      o: bind


networks:
  net:


#   django:
#     build: ./django
#     image: django
#     volumes:
#       - gateway:/usr/src/app
#     container_name: django
#     restart: always
#     ports:
#       - 8000:8000
#     depends_on:
#       - db

#   user_api:
#     build: ./user_api
#     image: user_api
#     volumes:
#       - vol_user_api:/usr/src/app
#     container_name: userapi
#     restart: always
#     ports:
#       - 8001:8000
#     depends_on:
#       - db

#   db:
#     image: postgres
#     container_name: db
#     restart: always
#     ports:
#       - 5432:5432
#     volumes:
#       - vol_db:/var/lib/postgresql/data
#     environment:
#       POSTGRES_PASSWORD: example
#       POSTGRES_USER: user 
#       POSTGRES_DB: db_name

#   adminer:
#     image: adminer
#     container_name: adminer
#     restart: always
#     ports:
#       - 8008:8080

# volumes:
#   gateway:
#     driver: local
#     driver_opts:
#       type: none
#       device: /Users/eboulhou/Desktop/docker_trans/volumes/gateway
#       o: bind

#   vol_user_api:
#     driver: local
#     driver_opts:
#       type: none
#       device: /Users/eboulhou/Desktop/docker_trans/volumes/user_api
#       o: bind

#   vol_db:
#     driver: local
#     driver_opts:
#       type: none
#       device: /Users/eboulhou/Desktop/docker_trans/volumes/db
#       o: bind


  




